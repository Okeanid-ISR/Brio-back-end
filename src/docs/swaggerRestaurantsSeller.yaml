openapi: 3.0.1
info:
  title: Restaurant API (Seller Side)
  version: 1.0.0
servers:
  - url: http://localhost:3001/
tags:
  - name: Restaurant Seller Side
    description: All routes for restaurant seller side
paths:
  /restaurants/{id}:
    get:
      tags:
        - Restaurant Seller Side
        - Restaurant Client Side
      summary: Returns a restaurant by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the restaurant to retrieve.
      responses:
        "200":
          description: A restaurant object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"
    put:
      tags:
        - Restaurant Seller Side
      summary: Updates a restaurant by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the restaurant to update.
        - in: body
          name: body
          description: The updated restaurant object.
          schema:
            $ref: "#/components/schemas/RestaurantInput"
      responses:
        "200":
          description: The updated restaurant object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"
    delete:
      tags:
        - Restaurant Seller Side
      summary: Deletes a restaurant by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the restaurant to delete.
      responses:
        "204":
          description: The restaurant was deleted successfully.
  /restaurants/{id}/products:
    get:
      tags:
        - Restaurant Seller Side
        - Restaurant Client Side
      summary: Returns a restaurant's menu by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the restaurant to retrieve the menu from.
      responses:
        "200":
          description: A JSON array of product objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    post:
      tags:
        - Restaurant Seller Side
      summary: Creates a new product for a restaurant by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the restaurant to create the product for.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        "201":
          description: The newly created product object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    put:
      tags:
        - Restaurant Seller Side
      summary: Updates a product by ID for a restaurant by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the restaurant that the product belongs to.
        - in: path
          name: product_id
          schema:
            type: string
          required: true
          description: The ID of the product to update.
        - in: body
          name: body
          description: The updated product object.
          schema:
            $ref: "#/components/schemas/ProductInput"
      responses:
        "200":
          description: The updated product object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

            "200":
              description: The updated product object.
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Product"
  /restaurants/{id}/products/{product_id}:
    delete:
      tags:
        - Restaurant Seller Side
      summary: Deletes a product by ID for a restaurant by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the restaurant that the product belongs to.
        - in: path
          name: product_id
          schema:
            type: string
          required: true
          description: The ID of the product to delete.
      responses:
        "204":
          description: The product was deleted successfully.
        "404":
          description: The restaurant or product was not found.
components:
  schemas:

    Companies:
      type: object
      properties:
        id:
          type: int
          description: The ID of the company.
        name:
          type: string
          description: The name of the company.

    Users:
      type: object
      properties:
        id:
          type: int
          description: The ID of the user.
        firstname:
          type: string
          description: The firstname of the user.
        lastname:
          type: string
          description: The lastname of the user.
        email:
          type: string
          description: The email of the user.
        phone:
          type: string
          description: The phone of the user.
        company:
          type: string
          description: ref to the company of the user.

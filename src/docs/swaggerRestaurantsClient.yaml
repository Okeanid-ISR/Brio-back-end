openapi: 3.0.1
info:
  title: Restaurant API
  version: 1.0.0
servers:
  - url: http://localhost:3001/
tags:
  - name: Restaurant Client Side
    description: All routes for restaurant client side
paths:
  /restaurants:
    get:
      tags:
        - Restaurant Client Side
      summary: Retrieve all restaurants
      responses:
        200:
          description: A list of all restaurants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Restaurant"
  /restaurants/{id}:
    get:
      tags:
        - Restaurant Client Side
      summary: Retrieve a specific restaurant by ID
      parameters:
        - name: id
          in: path
          description: ID of the restaurant to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: A single restaurant
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"
        404:
          description: Restaurant not found
          content: {}
  /restaurants/recommends:
    get:
      tags:
        - Restaurant Client Side
      summary: Retrieve recommended restaurants
      responses:
        200:
          description: A list of recommended restaurants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Restaurant"
components:
  schemas:
    # Schema for Restaurant object
    Restaurant:
      type: object
      properties:
        id:
          type: string
          description: The ID of the restaurant.
        name:
          type: string
          description: The name of the restaurant.
        address:
          type: string
          description: The address of the restaurant.
        phone_number:
          type: string
          description: The phone number of the restaurant.
      required:
        - id
        - name
        - address

    # Schema for RestaurantInput object
    RestaurantInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the restaurant.
        address:
          type: string
          description: The address of the restaurant.
        phone_number:
          type: string
          description: The phone number of the restaurant.

    # Schema for Product object
    Product:
      type: object
      properties:
        id:
          type: string
          description: The ID of the product.
        name:
          type: string
          description: The name of the product.
        description:
          type: string
          description: The description of the product.
        price:
          type: number
          description: The price of the product.
      required:
        - id
        - name
        - price

    # Schema for ProductInput object
    ProductInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the product.
        description:
          type: string
          description: The description of the product.
        price:
          type: number
          description: The price of the product.
